---
- name: Setup Local Talos Kubernetes Cluster with Cilium (Helm + CLI) and Flux CD
  hosts: localhost
  vars_prompt:
    - name: github_pat
      prompt: "Github PAT"
  vars:
    talos_version: "1.10.2"
    kubernetes_version: "1.33.1"
    hubble_version: "1.17.3"
    cluster_name: "Istari"
    flux_git_repo: "https://github.com/benjaminmnoer/iac.git"

  tasks:
    - name: Update system packages
      become: true
      pacman:
        update_cache: true
        upgrade: true

    - name: Install required pacman packages
      become: true
      pacman:
        name:
          - docker
          - kubectl
          - fluxcd
          - helm
          - jq
          - wget
          - cilium-cli
        state: present

    - name: Create a data container
      community.docker.docker_container:
        name: smb-server
        image: dperson/samba
        restart_policy: always
        state: started
        published_ports:
          - "139:139"
          - "445:445"
        volumes:
          - /Storage/smb-share/:/shares/:z
        command: '-s "Shares;/shares;yes;no;no;test" -u "test;test" -p'

    - name: Download Hubble
      become: true
      get_url:
        url: https://github.com/cilium/hubble/releases/download/v{{ hubble_version }}/hubble-linux-amd64.tar.gz
        dest: /tmp/hubble-linux-amd64.tar.gz
        mode: u=rwx,g=rx,o=rx
        owner: root
        group: root
        checksum: sha256:https://github.com/cilium/hubble/releases/download/v{{ hubble_version }}/hubble-linux-amd64.tar.gz.sha256sum

    - name: Install Hubble
      become: true
      unarchive:
        src: /tmp/hubble-linux-amd64.tar.gz
        dest: /usr/local/bin

    - name: Download talosctl checksums
      get_url:
        url: https://github.com/siderolabs/talos/releases/download/v{{ talos_version }}/sha256sum.txt
        dest: /tmp/talosctl-sha256sum.txt
        mode: u=rwx,g=rx,o=rx

    - name: Install talosctl
      become: true
      get_url:
        url: https://github.com/siderolabs/talos/releases/download/v{{ talos_version }}/talosctl-linux-amd64
        dest: /usr/local/bin/talosctl
        checksum: "sha256:{{ checksum[0].split()[0] }}"
        owner: root
        group: root
        mode: u=rwx,g=rx,o=rx
      vars:
        checksum: '{{ lookup("file", "/tmp/talosctl-sha256sum.txt").splitlines() | select("match", ".*talosctl-linux-amd64$") | list }}'

    - name: Create Talos cluster without a default CNI
      command: >
        talosctl cluster create
        --name {{ cluster_name }}
        --kubernetes-version {{ kubernetes_version }}
        --config-patch @talos-patch.yaml
        --skip-k8s-node-readiness-check
        --controlplanes=1
        --workers=3

    - name: Add Cilium Helm repository
      kubernetes.core.helm_repository:
        name: cilium
        repo_url: https://helm.cilium.io
        force_update: true

    - name: Install Cilium using Helm
      kubernetes.core.helm:
        name: cilium
        chart_ref: cilium/cilium
        release_namespace: kube-system
        update_repo_cache: true
        set_values:
          - value: ipam.mode=kubernetes
          - value: kubeProxyReplacement=true
          - value: securityContext.capabilities.ciliumAgent="{CHOWN,KILL,NET_ADMIN,NET_RAW,IPC_LOCK,SYS_ADMIN,SYS_RESOURCE,DAC_OVERRIDE,FOWNER,SETGID,SETUID}"
          - value: securityContext.capabilities.cleanCiliumState="{NET_ADMIN,SYS_ADMIN,SYS_RESOURCE}"
          - value: cgroup.autoMount.enabled=false
          - value: cgroup.hostRoot=/sys/fs/cgroup
          - value: k8sServiceHost=localhost
          - value: k8sServicePort=7445
          - value: hubble.relay.enabled=true
          - value: hubble.ui.enabled=true

    - name: Verify Cilium CLI is working
      command: cilium-cli status --wait

    - name: DNS test
      command: kubectl run -it --rm --restart=Never --image=busybox dns-test -- nslookup google.com

    - name: Bootstrap Flux into Kubernetes
      command: >
        flux bootstrap github
        --owner="benjaminmnoer"
        --repository="iac"
        --branch="master"
        --path="clusters/staging"
        --personal
      environment:
        GITHUB_TOKEN: "{{ github_pat }}"
